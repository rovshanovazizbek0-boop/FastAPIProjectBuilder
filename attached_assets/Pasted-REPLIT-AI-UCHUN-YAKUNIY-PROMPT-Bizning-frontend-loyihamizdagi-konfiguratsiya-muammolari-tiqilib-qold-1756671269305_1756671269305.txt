REPLIT AI UCHUN YAKUNIY PROMPT
Bizning frontend loyihamizdagi konfiguratsiya muammolari tiqilib qoldi. Biz uni noldan qayta yaratamiz. Quyidagi amallarni juda ehtiyotkorlik bilan va aniq ketma-ketlikda bajar:

ESKI LOYIHANI O'CHIRISH: Avval muammoli frontend papkasini butunlay yo'q qil. Buning uchun loyihaning asosiy papkasida (/workspace/) turib, quyidagi buyruqni ishga tushir:
rm -rf frontend

YANGI LOYIHANI YARATISH: Endi toza frontend loyihasini yarat:
npm create vite@latest frontend -- --template react-ts

KERAKLI PAKETLARNI O'RNATISH: Yangi yaratilgan frontend papkasiga o'tib, barcha kerakli paketlarni bitta buyruq bilan o'rnat:

Bash

cd frontend && npm install axios react-router-dom && npm install -D tailwindcss postcss autoprefixer tailwindcss-animate @tailwindcss/postcss
TO'G'RI KONFIGURATSIYALARNI YARATISH: Endi, hali ham frontend papkasida turgan holda, quyidagi buyruqlar bilan barcha konfiguratsiya fayllarini to'g'ri tarkib bilan yarat:

postcss.config.js yaratish:

Bash

echo 'export default { plugins: { "tailwindcss/nesting": {}, tailwindcss: {}, autoprefixer: {}, }, }' > postcss.config.js
tailwind.config.js yaratish (shadcn/ui uchun to'liq sozlamalar bilan):

Bash

echo '/** @type {import("tailwindcss").Config} */
module.exports = {
  darkMode: ["class"],
  content: ["./src/**/*.{ts,tsx}"],
  prefix: "",
  theme: {
    container: { center: true, padding: "2rem", screens: { "2xl": "1400px" } },
    extend: {
      colors: { border: "hsl(var(--border))", input: "hsl(var(--input))", ring: "hsl(var(--ring))", background: "hsl(var(--background))", foreground: "hsl(var(--foreground))", primary: { DEFAULT: "hsl(var(--primary))", foreground: "hsl(var(--primary-foreground))" }, secondary: { DEFAULT: "hsl(var(--secondary))", foreground: "hsl(var(--secondary-foreground))" }, destructive: { DEFAULT: "hsl(var(--destructive))", foreground: "hsl(var(--destructive-foreground))" }, muted: { DEFAULT: "hsl(var(--muted))", foreground: "hsl(var(--muted-foreground))" }, accent: { DEFAULT: "hsl(var(--accent))", foreground: "hsl(var(--accent-foreground))" }, popover: { DEFAULT: "hsl(var(--popover))", foreground: "hsl(var(--popover-foreground))" }, card: { DEFAULT: "hsl(var(--card))", foreground: "hsl(var(--card-foreground))" } },
      borderRadius: { lg: "var(--radius)", md: "calc(var(--radius) - 2px)", sm: "calc(var(--radius) - 4px)" },
      keyframes: { "accordion-down": { from: { height: "0" }, to: { height: "var(--radix-accordion-content-height)" } }, "accordion-up": { from: { height: "var(--radix-accordion-content-height)" }, to: { height: "0" } } },
      animation: { "accordion-down": "accordion-down 0.2s ease-out", "accordion-up": "accordion-up 0.2s ease-out" }
    }
  },
  plugins: [require("tailwindcss-animate")],
}' > tailwind.config.js
vite.config.ts yaratish (Replit uchun to'liq sozlamalar bilan):

Bash

echo 'import { defineConfig } from "vite";
import react from "@vitejs/plugin-react";
import path from "path";
export default defineConfig({
  plugins: [react()],
  resolve: { alias: { "@": path.resolve(__dirname, "./src") } },
  server: {
    host: "0.0.0.0",
    port: 5000,
    hmr: { clientPort: 443 },
    proxy: { "/api": { target: "http://127.0.0.1:8000", changeOrigin: true, rewrite: (path) => path.replace(/^\/api/, "") } }
  }
});' > vite.config.ts
ASOSIY CSS'NI YARATISH: src/index.css faylini to'g'ri tarkib bilan yarating:

Bash

echo "@tailwind base;
@tailwind components;
@tailwind utilities;
@layer base {
  :root { --background: 0 0% 100%; --foreground: 222.2 84% 4.9%; --card: 0 0% 100%; --card-foreground: 222.2 84% 4.9%; --popover: 0 0% 100%; --popover-foreground: 222.2 84% 4.9%; --primary: 222.2 47.4% 11.2%; --primary-foreground: 210 40% 98%; --secondary: 210 40% 96.1%; --secondary-foreground: 222.2 47.4% 11.2%; --muted: 210 40% 96.1%; --muted-foreground: 215.4 16.3% 46.9%; --accent: 210 40% 96.1%; --accent-foreground: 222.2 47.4% 11.2%; --destructive: 0 84.2% 60.2%; --destructive-foreground: 210 40% 98%; --border: 214.3 31.8% 91.4%; --input: 214.3 31.8% 91.4%; --ring: 222.2 84% 4.9%; --radius: 0.5rem; }
}
@layer base {
  * { @apply border-border; }
  body { @apply bg-background text-foreground; }
}" > src/index.css
ILOVALARNI QAYTA QURISH: Endi avvalgi bosqichlardagi kabi App.tsx, main.tsx, Login.tsx va boshqa komponentlarni qayta yarat. Hozircha faqat App.tsx va main.tsx ni boshlang'ich holatga keltir.

Barcha amallar tugagandan so'ng, "Frontend loyihasi noldan to'liq qayta qurildi" deb xabar ber va serverni ishga tushir.
Yakuniy Hisobot Talabi:

Bu oxirgi chora. Iltimos, ushbu murakkab topshiriqni AI'ga bering.

Natijani menga yuboring. Agar shu usul ham ish bermasa, unda bu Replit loyihasida fundamental muammo mavjud va uni tashlab, yangi Replit loyihasi ochish kerak bo'ladi. Lekin bu safar barchasi ishlashi kerak.