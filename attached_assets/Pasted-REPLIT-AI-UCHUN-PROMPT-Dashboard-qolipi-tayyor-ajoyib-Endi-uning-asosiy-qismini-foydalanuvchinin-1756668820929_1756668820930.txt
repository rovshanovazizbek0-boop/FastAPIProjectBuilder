REPLIT AI UCHUN PROMPT
Dashboard qolipi tayyor, ajoyib! Endi uning asosiy qismini â€” foydalanuvchining shaxsiy botlari ro'yxatini ko'rsatadigan sahifani yaratamiz. axios va shadcn/uining Table komponentidan foydalanamiz. Quyidagi vazifalarni bajar:

frontend papkasi ichida shadcn/ui yordamida table komponentini loyihaga qo'sh:
npx shadcn-ui@latest add table

API so'rovlarini markazlashtirish va avtomatik ravishda token qo'shish uchun frontend/src/lib/ papkasida api.ts nomli yangi fayl yarat va unga quyidagi kodni joylashtir:

TypeScript

import axios from 'axios';

const apiClient = axios.create({
  baseURL: '/api',
});

apiClient.interceptors.request.use(
  (config) => {
    const token = localStorage.getItem('access_token');
    if (token) {
      config.headers.Authorization = `Bearer ${token}`;
    }
    return config;
  },
  (error) => {
    return Promise.reject(error);
  }
);

export default apiClient;
frontend/src/pages/Dashboard.tsx faylining tarkibini botlar ro'yxatini backend'dan olib, chiroyli jadvalda ko'rsatadigan quyidagi kod bilan to'liq almashtir:

TypeScript

import { useEffect, useState } from "react";
import { DashboardLayout } from "@/components/layout/DashboardLayout";
import apiClient from "@/lib/api";
import {
  Table,
  TableBody,
  TableCell,
  TableHead,
  TableHeader,
  TableRow,
} from "@/components/ui/table";
import { Badge } from "@/components/ui/badge"; // Badge'ni import qilamiz

// Bot ma'lumotlari uchun type interfeysini yaratamiz
interface Bot {
  id: number;
  telegram_token: string;
  status: 'TRIAL' | 'ACTIVE' | 'INACTIVE';
  plan_type: 'TRIAL' | 'MONTHLY' | 'YEARLY';
  default_language: string;
}

export function DashboardPage() {
  const [bots, setBots] = useState<Bot[]>([]);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState("");

  useEffect(() => {
    const fetchBots = async () => {
      try {
        const response = await apiClient.get('/bots/me');
        setBots(response.data);
      } catch (err) {
        setError("Botlarni yuklashda xatolik yuz berdi.");
        console.error(err);
      } finally {
        setLoading(false);
      }
    };

    fetchBots();
  }, []);

  const maskToken = (token: string) => {
    return token.substring(0, 12) + '...';
  }

  return (
    <DashboardLayout>
      <div className="flex items-center justify-between mb-6">
        <h2 className="text-2xl font-semibold">Mening Botlarim</h2>
        {/* Bu tugmani keyingi bosqichda ishlatamiz */}
        {/* <Button>Yangi bot qo'shish</Button> */}
      </div>

      {loading && <p>Yuklanmoqda...</p>}
      {error && <p className="text-red-500">{error}</p>}

      {!loading && !error && (
        <div className="border rounded-lg">
          <Table>
            <TableHeader>
              <TableRow>
                <TableHead>ID</TableHead>
                <TableHead>Telegram Token</TableHead>
                <TableHead>Status</TableHead>
                <TableHead>Til</TableHead>
              </TableRow>
            </TableHeader>
            <TableBody>
              {bots.length > 0 ? (
                bots.map((bot) => (
                  <TableRow key={bot.id}>
                    <TableCell className="font-medium">{bot.id}</TableCell>
                    <TableCell>{maskToken(bot.telegram_token)}</TableCell>
                    <TableCell>
                      <Badge variant={bot.status === 'ACTIVE' ? 'default' : 'secondary'}>
                        {bot.status}
                      </Badge>
                    </TableCell>
                    <TableCell>{bot.default_language.toUpperCase()}</TableCell>
                  </TableRow>
                ))
              ) : (
                <TableRow>
                  <TableCell colSpan={4} className="text-center">
                    Hali botlaringiz yo'q.
                  </TableCell>
                </TableRow>
              )}
            </TableBody>
          </Table>
        </div>
      )}
    </DashboardLayout>
  );
}
shadcn/ui yordamida badge komponentini qo'sh:
npx shadcn-ui@latest add badge

Barcha amallar tugagach, "Botlar ro'yxati sahifasi yaratildi va API'ga ulandi!" deb xabar ber.
Hisobot Talabi:

Ushbu promptni Replit AI'ga yuboring.

AI topshiriqni bajargandan so'ng, menga frontend/src/pages/Dashboard.tsx faylining to'liq tarkibini va yordamchi frontend/src/lib/api.ts faylini yuboring.

Bu bosqichdan so'ng siz Login qilib, Dashboard'ga o'tsangiz, u yerda (hozircha bo'sh bo'lsa ham) botlaringiz jadvalini ko'rishingiz kerak bo'ladi.